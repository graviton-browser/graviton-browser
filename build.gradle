buildscript {
    ext.kotlin_version = '1.2.61'
    ext.kotlin_native_version = '0.8.2'   // TODO: Update

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    // id 'com.zyxist.chainsaw' version '0.3.1'
    id 'se.patrikerdes.use-latest-versions' version '0.2.3'
    id 'com.github.ben-manes.versions' version '0.20.0'
}

group 'net.plan99.graviton'
version '1'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'kotlin'

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = "net.plan99.graviton.Graviton"
ext.moduleName = "graviton.browser"

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

dependencies {
    compile project(":graviton-shell")
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    inputs.property("moduleName", moduleName)
    manifest {
        attributes(
                'Automatic-Module-Name': moduleName,
                'Main-Class': mainClassName,
                'Class-Path': configurations.runtime.collect { it.getName() }.join(' ')
        )
    }
}

test {
    failFast = true
}

task copyBootstrapToLibs(type: Copy, dependsOn: [installDist, tasks.getByPath(':bootstrap:compileKonan')]) {
    def os = System.properties['os.name'].toLowerCase()
    if (os.contains('mac'))
        from 'bootstrap/build/konan/bin/macos_x64'
    else if (os.contains('win'))
        from 'bootstrap/build/konan/bin/mingw_x64'
    else if (os.contains('linux'))
        from 'bootstrap/build/konan/bin/linux'
    from 'LICENSE'
    into('build/install/graviton/lib')
}

// Used from the package-mac.sh script.
task printVersion {
    doFirst {
        println project.version
    }
}

// Run like this: gradlew "-Dorg.gradle.java.home=C:\Program Files\Java\jdk-10" packageWin
// on a system with InnoSetup installed.
task packageWin(type: Exec, dependsOn: [copyBootstrapToLibs]) {
    workingDir project.projectDir
    def outDir = "${buildDir}/packaged"
    outputs.dir(outDir)
    inputs.files(copyBootstrapToLibs.outputs)
    inputs.files("package/windows")
    outputs.file("build/packaged/GravitonBrowser.exe")

    // Export it so the InnoSetup pre-processor can use it.
    environment "GRAVITON_VERSION", project.version

    // TODO: Signing
    // TODO: Icons

    commandLine = [
            'javapackager',
            '-deploy',
            '-nosign',
            '-native', 'exe',
            '-outdir', outDir,
            '-outfile', 'GravitonBrowser',
            '-name', 'GravitonBrowser',
            '-appclass', mainClassName,
            '-srcdir', 'build/install/graviton/lib',
            "-BmainJar=graviton-${project.version}.jar",
            '-Bidentifier=net.plan99.graviton.browser',
            "-Bappversion=${project.version}",
            '-BsystemWide=false',   // So UAC/admin privs aren't needed for update
            '-BinstalldirChooser=false',
            '-Bvendor=Graviton Team',
            '-Bicon=GravitonBrowser.ico',
            '-BmenuHint=true',
            '-Bwin.menuGroup=Graviton Browser',
            '-v'
    ]
}

// TODO: Use the bootstrapper tool. Lay out files in numbered directories.
task packageLinux(type: Exec, dependsOn: [copyBootstrapToLibs]) {
    workingDir project.projectDir
    def outDir = "${buildDir}/packaged"
    outputs.dir(outDir)
    inputs.files(copyBootstrapToLibs.outputs)
    inputs.files('package/linux')

    environment "GRAVITON_VERSION", project.version

    commandLine = [
            'javapackager',
            '-deploy',
            '-nosign',
            '-native', 'deb',
            '-outdir', outDir,
            '-outfile', 'GravitonBrowser',
            '-name', 'Graviton Browser',
            '-appclass', mainClassName,
            '-srcdir', 'build/install/graviton/lib',
            '-Bidentifier=net.plan99.graviton.browser',
            "-BmainJar=graviton-${project.version}.jar",
            "-BappVersion=${project.version}",
            "-Bcategory=Network",
            "-Bemail=mike@plan99.net",
            "-Bcopyright=Graviton",
            "-BlicenseType=Apache-2.0",
            "-BlicenseFile=LICENSE",
            "-Bvendor=Mike Hearn",
            "-v"
    ]

    // TODO: Signing
    // TODO: Icons

}