import org.apache.tools.ant.taskdefs.condition.Os

group 'app.graviton'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://dl.bintray.com/jetbrains/kotlin-native-dependencies"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-native-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'konan'

konanArtifacts {
    // The version number to be embedded in the EXEs. This is used by InnoSetup to decide whether
    // to overwrite the bootstrapper programs or not. Increment this when we want an update to
    // refresh the binaries.
    def ver = 2

    program('bootstrap') {
        enableDebug false
        target('macbook') {
            srcFiles 'src/main/kotlin/mac.kt', 'src/main/kotlin/bootstrap-posix.kt'
        }
        target('mingw') {
            srcFiles 'src/main/kotlin/win.kt'
            linkerOpts "-Wl,--subsystem,windows", "-Wl,--major-image-version=$ver", "-Wl,--no-insert-timestamp", "-Wl,-S"
        }
        target('linux') {
            srcFiles 'src/main/kotlin/linux.kt', 'src/main/kotlin/bootstrap-posix.kt'
        }
    }

    // Windows programs have to be tagged in the EXE headers as either 'console' or 'gui' and there's no way to win,
    // both modes suck in different ways. So we have to produce two binaries here.
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        program('bootstrap-console') {
            target('mingw') {
                srcFiles 'src/main/kotlin/win.kt'
                linkerOpts "-Wl,--subsystem,console", "-Wl,--major-image-version=$ver", "-Wl,--no-insert-timestamp"
            }
        }
    }
}